#include<stdio.h>
#include<stdlib.h>
#define MAX 15
int queue[MAX];
int front=-1;
int rear=-1;
void enque(int x);
int deque();
int isempty();
int isfull();
char nodec[10];
int node[10];
int n;
int visited[10];
int adj[10][10];
void bfs(int p)
{
	int i;
	do
	{   if(visited[p]==0)
	    {		
	    printf("%c",nodec[p]);
		visited[p]=1;
	    }
		for(i=0;i<n;i++)
		if((adj[p][i]==1)&&(visited[i]==0))
		{
			printf("%c",nodec[i]);
			visited[i]=1;
			enque(i);
		}
		p=deque();
	}
	while(!isempty());
}

int main()
{
	int i,j;
	printf("Enter the number of the nodes : ");
	scanf("%d",&n);
	printf("Enter the names of the nodes : \n");
	for(i=0;i<n;i++)
	{
	fflush(stdin);
	scanf("%c",&nodec[i]);
	}
	for(i=0;i<n;i++)
	node[i]=i;
	printf("Enter adjacency matrix :\n");
	for(i=0;i<n;i++)
	for(j=0;j<n;j++)
	scanf("%d",&adj[i][j]);
	for(i=0;i<n;i++)
	visited[i]=0;
	bfs(node[0]);
}

void enque(int x)
{
rear++;
queue[rear]=x;	
}

int deque()
{
int x=-1;
front++;
x=queue[front];	
return(x);
}

int isempty()
{
	if(front==rear)
	return 1;
	else
	return 0;
}

int isfull()
{
	if(rear==MAX-1)
	return 1;
	else
	return 0;
}
